/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CUSD, CUSDInterface } from "../../contracts/CUSD";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "multiTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "multiTransferSingleValue",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destroyer",
        type: "address",
      },
    ],
    name: "setDestroyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526007805460ff191690553480156200001b57600080fd5b5060405162001806380380620018068339810160408190526200003e9162000169565b336000908152600560205260408120859055600385905562000061848262000289565b50600162000070828262000289565b50506002805460ff90921660ff199092169190911790555050600480546001600160a01b0319163317905562000355565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c957600080fd5b81516001600160401b0380821115620000e657620000e6620000a1565b604051601f8301601f19908116603f01168101908282118183101715620001115762000111620000a1565b81604052838152602092508660208588010111156200012f57600080fd5b600091505b8382101562000153578582018301518183018401529082019062000134565b6000602085830101528094505050505092915050565b600080600080608085870312156200018057600080fd5b845160208601519094506001600160401b0380821115620001a057600080fd5b620001ae88838901620000b7565b94506040870151915060ff82168214620001c757600080fd5b606087015191935080821115620001dd57600080fd5b50620001ec87828801620000b7565b91505092959194509250565b600181811c908216806200020d57607f821691505b6020821081036200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000284576000816000526020600020601f850160051c810160208610156200025f5750805b601f850160051c820191505b8181101562000280578281556001016200026b565b5050505b505050565b81516001600160401b03811115620002a557620002a5620000a1565b620002bd81620002b68454620001f8565b8462000234565b602080601f831160018114620002f55760008415620002dc5750858301515b600019600386901b1c1916600185901b17855562000280565b600085815260208120601f198616915b82811015620003265788860151825594840194600190910190840162000305565b5085821015620003455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114a180620003656000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806340c10f19116100d85780637d64bcb41161008c578063a9059cbb11610066578063a9059cbb14610309578063dd62ed3e1461031c578063f2fde38b1461034757600080fd5b80637d64bcb4146102e65780638da5cb5b146102ee57806395d89b411461030157600080fd5b80635e1648cb116100bd5780635e1648cb146102a05780636a7301b8146102b357806370a08231146102c657600080fd5b806340c10f191461027a57806342966c681461028d57600080fd5b806318160ddd1161012f57806323b872dd1161011457806323b872dd14610233578063313ce567146102465780633f5160181461026557600080fd5b806318160ddd146102095780631e89d5451461022057600080fd5b806306fdde031161016057806306fdde03146101ce578063095ea7b3146101e357806311367b26146101f657600080fd5b806302d05d3f1461017c57806305d2035b146101b1575b600080fd5b6007546101949061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6007546101be9060ff1681565b60405190151581526020016101a8565b6101d661035a565b6040516101a89190611099565b6101be6101f1366004611104565b6103e8565b600854610194906001600160a01b031681565b61021260035481565b6040519081526020016101a8565b6101be61022e36600461120f565b6104a3565b6101be6102413660046112ca565b610552565b6002546102539060ff1681565b60405160ff90911681526020016101a8565b610278610273366004611306565b61083d565b005b6101be610288366004611104565b6108e9565b61027861029b366004611321565b610a44565b6101be6102ae36600461133a565b610b14565b6102786102c1366004611306565b610bbb565b6102126102d4366004611306565b60056020526000908152604090205481565b6101be610c57565b600454610194906001600160a01b031681565b6101d6610cb2565b6101be610317366004611104565b610cbf565b61021261032a36600461137f565b600660209081526000928352604080842090915290825290205481565b610278610355366004611306565b610f51565b60008054610367906113b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610393906113b2565b80156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b505050505081565b600080821161043e5760405162461bcd60e51b815260206004820152600f60248201527f43616e6e6f7420757365207a65726f000000000000000000000000000000000060448201526064015b60405180910390fd5b3360008181526006602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b92915050565b600060c8835111156104f75760405162461bcd60e51b815260206004820152601360248201527f546f6f206d616e7920726563697069656e7473000000000000000000000000006044820152606401610435565b60005b83518110156105485761053f848281518110610518576105186113ec565b6020026020010151848381518110610532576105326113ec565b6020026020010151610cbf565b506001016104fa565b5060019392505050565b60006001600160a01b0383166105aa5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420757365207a65726f20616464726573730000000000000000006044820152606401610435565b600082116105fa5760405162461bcd60e51b815260206004820152601560248201527f43616e6e6f7420757365207a65726f2076616c756500000000000000000000006044820152606401610435565b6001600160a01b0384166000908152600560205260409020548211156106625760405162461bcd60e51b815260206004820152601260248201527f42616c616e6365206e6f7420656e6f75676800000000000000000000000000006044820152606401610435565b6001600160a01b0383166000908152600560205260409020546106858382611418565b116106d25760405162461bcd60e51b815260206004820152600f60248201527f43616e6e6f74206f766572666c6f7700000000000000000000000000000000006044820152606401610435565b6001600160a01b03841660009081526006602090815260408083203384529091529020548211156107455760405162461bcd60e51b815260206004820152601560248201527f43616e6e6f74206f76657220616c6c6f77616e636500000000000000000000006044820152606401610435565b6001600160a01b0384166000908152600560205260409020546107689083610fcd565b6001600160a01b0380861660009081526005602052604080822093909355908516815220546107979083611033565b6001600160a01b0380851660009081526005602090815260408083209490945591871681526006825282812033825290915220546107d59083610fcd565b6001600160a01b03858116600081815260066020908152604080832033845282529182902094909455518581529186169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019392505050565b6004546001600160a01b0316331461085457600080fd5b6001600160a01b0381166108aa5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420757365207a65726f20616464726573730000000000000000006044820152606401610435565b600780546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b60075460009061010090046001600160a01b0316331461090857600080fd5b60075460ff161561091857600080fd5b6001600160a01b03831661096e5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420757365207a65726f20616464726573730000000000000000006044820152606401610435565b6001600160a01b0383166000908152600560205260409020546109918382611418565b1161099b57600080fd5b6003546109a88382611418565b116109b257600080fd5b6109be60035483611033565b6003556001600160a01b0383166000908152600560205260409020546109e49083611033565b6001600160a01b038416600081815260056020526040908190209290925590517f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590610a339085815260200190565b60405180910390a250600192915050565b6008546001600160a01b03163314610a5b57600080fd5b6008546001600160a01b03166000908152600560205260409020548111801590610a855750600081115b610a8e57600080fd5b6008546001600160a01b0316600090815260056020526040902054610ab39082610fcd565b6008546001600160a01b0316600090815260056020526040902055600354610adb9082610fcd565b6003556040518181527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9060200160405180910390a150565b600080610b2483620f424061142b565b905060c884511115610b785760405162461bcd60e51b815260206004820152601360248201527f546f6f206d616e7920726563697069656e7473000000000000000000000000006044820152606401610435565b60005b8451811015610bb057610ba7858281518110610b9957610b996113ec565b602002602001015183610cbf565b50600101610b7b565b506001949350505050565b6004546001600160a01b03163314610bd257600080fd5b6001600160a01b038116610c285760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420757365207a65726f20616464726573730000000000000000006044820152606401610435565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60075460009061010090046001600160a01b03163314610c7657600080fd5b6007805460ff191660011790556040517fb828d9b5c78095deeeeff2eca2e5d4fe046ce3feb4c99702624a3fd384ad2dbc90600090a150600190565b60018054610367906113b2565b6000306001600160a01b03841603610cd657600080fd5b6001600160a01b038316610d2c5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420757365207a65726f20616464726573730000000000000000006044820152606401610435565b60008211610d7c5760405162461bcd60e51b815260206004820152601560248201527f43616e6e6f7420757365207a65726f2076616c756500000000000000000000006044820152606401610435565b33600090815260056020526040902054821115610ddb5760405162461bcd60e51b815260206004820152601260248201527f42616c616e6365206e6f7420656e6f75676800000000000000000000000000006044820152606401610435565b6001600160a01b038316600090815260056020526040902054610dfe8382611418565b1015610e4c5760405162461bcd60e51b815260206004820152600860248201527f4f766572666c6f770000000000000000000000000000000000000000000000006044820152606401610435565b6001600160a01b0383166000908152600560205260408082205433835290822054610e779190611418565b33600090815260056020526040902054909150610e949084610fcd565b33600090815260056020526040808220929092556001600160a01b03861681522054610ec09084611033565b6001600160a01b0385166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f119087815260200190565b60405180910390a36001600160a01b038416600090815260056020526040808220543383529120548291610f4491611418565b1461054857610548611442565b6001600160a01b038116610f6457600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008282111561101f5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610435565b600061102b8385611458565b949350505050565b6000806110408385611418565b9050838110156110925760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610435565b9392505050565b60006020808352835180602085015260005b818110156110c7578581018301518582016040015282016110ab565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146110ff57600080fd5b919050565b6000806040838503121561111757600080fd5b611120836110e8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561116d5761116d61112e565b604052919050565b600067ffffffffffffffff82111561118f5761118f61112e565b5060051b60200190565b600082601f8301126111aa57600080fd5b813560206111bf6111ba83611175565b611144565b8083825260208201915060208460051b8701019350868411156111e157600080fd5b602086015b84811015611204576111f7816110e8565b83529183019183016111e6565b509695505050505050565b6000806040838503121561122257600080fd5b823567ffffffffffffffff8082111561123a57600080fd5b61124686838701611199565b935060209150818501358181111561125d57600080fd5b85019050601f8101861361127057600080fd5b803561127e6111ba82611175565b81815260059190911b8201830190838101908883111561129d57600080fd5b928401925b828410156112bb578335825292840192908401906112a2565b80955050505050509250929050565b6000806000606084860312156112df57600080fd5b6112e8846110e8565b92506112f6602085016110e8565b9150604084013590509250925092565b60006020828403121561131857600080fd5b611092826110e8565b60006020828403121561133357600080fd5b5035919050565b6000806040838503121561134d57600080fd5b823567ffffffffffffffff81111561136457600080fd5b61137085828601611199565b95602094909401359450505050565b6000806040838503121561139257600080fd5b61139b836110e8565b91506113a9602084016110e8565b90509250929050565b600181811c908216806113c657607f821691505b6020821081036113e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561049d5761049d611402565b808202811582820484141761049d5761049d611402565b634e487b7160e01b600052600160045260246000fd5b8181038181111561049d5761049d61140256fea2646970667358221220347b9d4552e45e8cdddbc70687bccfdfcf2c8ed0331876a62e4aeb315aa1f35764736f6c63430008180033";

type CUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CUSD__factory extends ContractFactory {
  constructor(...args: CUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CUSD> {
    return super.deploy(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    ) as Promise<CUSD>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): CUSD {
    return super.attach(address) as CUSD;
  }
  override connect(signer: Signer): CUSD__factory {
    return super.connect(signer) as CUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CUSDInterface {
    return new utils.Interface(_abi) as CUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CUSD {
    return new Contract(address, _abi, signerOrProvider) as CUSD;
  }
}
